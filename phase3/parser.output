Terminals unused in grammar

    LINE_COMM


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | if_stmt
    5     | while_stmt
    6     | for_stmt
    7     | returnstmt
    8     | break
    9     | continue
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 stmts: stmts stmt
   14      | stmt

   15 expr: assignexpr
   16     | expr OP_PLUS expr
   17     | expr OP_MINUS expr
   18     | expr OP_ASTERISK expr
   19     | expr OP_SLASH expr
   20     | expr OP_PERCENTAGE expr
   21     | expr OP_GREATER expr
   22     | expr OP_GREATER_EQ expr
   23     | expr OP_LESSER expr
   24     | expr OP_LESSER_EQ expr
   25     | expr OP_EQ_EQ expr
   26     | expr OP_NOT_EQ expr
   27     | expr AND expr
   28     | expr OR expr
   29     | term

   30 term: LEFT_PAR expr RIGHT_PAR
   31     | OP_MINUS expr
   32     | NOT expr
   33     | OP_PLUS_PLUS lvalue
   34     | lvalue OP_PLUS_PLUS
   35     | OP_MINUS_MINUS lvalue
   36     | lvalue OP_MINUS_MINUS
   37     | primary

   38 assignexpr: lvalue OP_EQUALS expr

   39 primary: lvalue
   40        | call
   41        | tablemake
   42        | LEFT_PAR funcdef RIGHT_PAR
   43        | const

   44 lvalue: IDENTIFIER
   45       | LOCAL IDENTIFIER
   46       | COL_COL IDENTIFIER
   47       | member
   48       | tableitem

   49 tableitem: lvalue DOT IDENTIFIER
   50          | lvalue LEFT_BRACKET expr RIGHT_BRACKET

   51 member: call DOT IDENTIFIER
   52       | call LEFT_BRACKET expr RIGHT_BRACKET

   53 $@1: %empty

   54 call: call $@1 LEFT_PAR elist RIGHT_PAR

   55 $@2: %empty

   56 call: lvalue $@2 callsuffix

   57 $@3: %empty

   58 call: LEFT_PAR funcdef RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR

   59 callsuffix: normcall
   60           | methodcall

   61 $@4: %empty

   62 normcall: LEFT_PAR $@4 elist RIGHT_PAR

   63 $@5: %empty

   64 methodcall: DOT_DOT $@5 IDENTIFIER LEFT_PAR elist RIGHT_PAR

   65 elist: expr
   66      | elist COMMA expr
   67      | %empty

   68 tablemake: LEFT_BRACKET elist RIGHT_BRACKET
   69          | LEFT_BRACKET indexed RIGHT_BRACKET

   70 indexed: indexedelem
   71        | indexed COMMA indexedelem

   72 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   73 $@6: %empty

   74 block: LEFT_BRACE $@6 RIGHT_BRACE

   75 $@7: %empty

   76 block: LEFT_BRACE $@7 stmts RIGHT_BRACE

   77 funcname: IDENTIFIER
   78         | %empty

   79 funcprefix: FUNCTION funcname

   80 funcargs: LEFT_PAR idlist RIGHT_PAR

   81 funcbody: funcblockstart block funcblockend

   82 funcdef: funcprefix funcargs funcbody

   83 funcblockstart: %empty

   84 funcblockend: %empty

   85 const: INTEGER
   86      | REAL
   87      | STRING
   88      | NIL
   89      | TRUE
   90      | FALSE

   91 idlist: IDENTIFIER
   92       | idlist COMMA IDENTIFIER
   93       | %empty

   94 ifprefix: IF LEFT_PAR expr RIGHT_PAR

   95 elseprefix: ELSE

   96 if_stmt: ifprefix stmt
   97        | ifprefix stmt elseprefix stmt

   98 whilestart: WHILE

   99 whilecond: LEFT_PAR expr RIGHT_PAR

  100 while_stmt: whilestart whilecond loopstmt

  101 N: %empty

  102 M: %empty

  103 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON

  104 for_stmt: forprefix N elist RIGHT_PAR N loopstmt N

  105 returnstmt: RETURN SEMICOLON
  106           | RETURN expr SEMICOLON

  107 loopstart: %empty

  108 loopend: %empty

  109 loopstmt: loopstart stmt loopend

  110 break: BREAK SEMICOLON

  111 continue: CONTINUE SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <intVal> (258) 85
    REAL <realVal> (259) 86
    STRING <strVal> (260) 87
    IDENTIFIER <strVal> (261) 44 45 46 49 51 64 77 91 92
    IF <strVal> (262) 94
    ELSE <strVal> (263) 95
    WHILE <strVal> (264) 98
    FOR <strVal> (265) 103
    FUNCTION <strVal> (266) 79
    RETURN <strVal> (267) 105 106
    BREAK <strVal> (268) 110
    CONTINUE <strVal> (269) 111
    AND <strVal> (270) 27
    NOT <strVal> (271) 32
    OR <strVal> (272) 28
    LOCAL <strVal> (273) 45
    TRUE <strVal> (274) 89
    FALSE <strVal> (275) 90
    NIL <strVal> (276) 88
    OP_EQUALS <strVal> (277) 38
    OP_PLUS <strVal> (278) 16
    OP_MINUS <strVal> (279) 17 31
    OP_ASTERISK <strVal> (280) 18
    OP_SLASH <strVal> (281) 19
    OP_PERCENTAGE <strVal> (282) 20
    OP_EQ_EQ <strVal> (283) 25
    OP_NOT_EQ <strVal> (284) 26
    OP_PLUS_PLUS <strVal> (285) 33 34
    OP_MINUS_MINUS <strVal> (286) 35 36
    OP_GREATER <strVal> (287) 21
    OP_LESSER <strVal> (288) 23
    OP_GREATER_EQ <strVal> (289) 22
    OP_LESSER_EQ <strVal> (290) 24
    LEFT_BRACE <strVal> (291) 72 74 76
    RIGHT_BRACE <strVal> (292) 72 74 76
    LEFT_BRACKET <strVal> (293) 50 52 68 69
    RIGHT_BRACKET <strVal> (294) 50 52 68 69
    LEFT_PAR <strVal> (295) 30 42 54 58 62 64 80 94 99 103
    RIGHT_PAR <strVal> (296) 30 42 54 58 62 64 80 94 99 104
    SEMICOLON <strVal> (297) 3 12 103 105 106 110 111
    COMMA <strVal> (298) 66 71 92
    COLON <strVal> (299) 72
    COL_COL <strVal> (300) 46
    DOT <strVal> (301) 49 51
    DOT_DOT <strVal> (302) 64
    LINE_COMM <strVal> (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    stmt <stmtVal> (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 13 14 96 97 109
    stmts <stmtVal> (52)
        on left: 13 14
        on right: 1 13 76
    expr <exprVal> (53)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 3 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 50 52 65 66 72 94 99 103 106
    term <exprVal> (54)
        on left: 30 31 32 33 34 35 36 37
        on right: 29
    assignexpr <exprVal> (55)
        on left: 38
        on right: 15
    primary <exprVal> (56)
        on left: 39 40 41 42 43
        on right: 37
    lvalue <exprVal> (57)
        on left: 44 45 46 47 48
        on right: 33 34 35 36 38 39 49 50 56
    tableitem <exprVal> (58)
        on left: 49 50
        on right: 48
    member <exprVal> (59)
        on left: 51 52
        on right: 47
    call <exprVal> (60)
        on left: 54 56 58
        on right: 40 51 52 54
    $@1 (61)
        on left: 53
        on right: 54
    $@2 (62)
        on left: 55
        on right: 56
    $@3 (63)
        on left: 57
        on right: 58
    callsuffix <callVal> (64)
        on left: 59 60
        on right: 56
    normcall <callVal> (65)
        on left: 62
        on right: 59
    $@4 (66)
        on left: 61
        on right: 62
    methodcall <callVal> (67)
        on left: 64
        on right: 60
    $@5 (68)
        on left: 63
        on right: 64
    elist <exprVal> (69)
        on left: 65 66 67
        on right: 54 58 62 64 66 68 103 104
    tablemake <exprVal> (70)
        on left: 68 69
        on right: 41
    indexed <indexedVal> (71)
        on left: 70 71
        on right: 69 71
    indexedelem <indexedVal> (72)
        on left: 72
        on right: 70 71
    block <stmtVal> (73)
        on left: 74 76
        on right: 10 81
    $@6 (74)
        on left: 73
        on right: 74
    $@7 (75)
        on left: 75
        on right: 76
    funcname <strVal> (76)
        on left: 77 78
        on right: 79
    funcprefix <symtVal> (77)
        on left: 79
        on right: 82
    funcargs <exprVal> (78)
        on left: 80
        on right: 82
    funcbody <uintVal> (79)
        on left: 81
        on right: 82
    funcdef <symtVal> (80)
        on left: 82
        on right: 11 42 58
    funcblockstart (81)
        on left: 83
        on right: 81
    funcblockend (82)
        on left: 84
        on right: 81
    const <exprVal> (83)
        on left: 85 86 87 88 89 90
        on right: 43
    idlist <exprVal> (84)
        on left: 91 92 93
        on right: 80 92
    ifprefix <intVal> (85)
        on left: 94
        on right: 96 97
    elseprefix <intVal> (86)
        on left: 95
        on right: 97
    if_stmt <stmtVal> (87)
        on left: 96 97
        on right: 4
    whilestart <intVal> (88)
        on left: 98
        on right: 100
    whilecond <intVal> (89)
        on left: 99
        on right: 100
    while_stmt <stmtVal> (90)
        on left: 100
        on right: 5
    N <intVal> (91)
        on left: 101
        on right: 104
    M <intVal> (92)
        on left: 102
        on right: 103
    forprefix <exprVal> (93)
        on left: 103
        on right: 104
    for_stmt <stmtVal> (94)
        on left: 104
        on right: 6
    returnstmt <stmtVal> (95)
        on left: 105 106
        on right: 7
    loopstart (96)
        on left: 107
        on right: 109
    loopend (97)
        on left: 108
        on right: 109
    loopstmt <stmtVal> (98)
        on left: 109
        on right: 100 104
    break <stmtVal> (99)
        on left: 110
        on right: 8
    continue <stmtVal> (100)
        on left: 111
        on right: 9


State 0

    0 $accept: â€¢ program $end

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    stmts       go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 1

   85 const: INTEGER â€¢

    $default  reduce using rule 85 (const)


State 2

   86 const: REAL â€¢

    $default  reduce using rule 86 (const)


State 3

   87 const: STRING â€¢

    $default  reduce using rule 87 (const)


State 4

   44 lvalue: IDENTIFIER â€¢

    $default  reduce using rule 44 (lvalue)


State 5

   94 ifprefix: IF â€¢ LEFT_PAR expr RIGHT_PAR

    LEFT_PAR  shift, and go to state 50


State 6

   98 whilestart: WHILE â€¢

    $default  reduce using rule 98 (whilestart)


State 7

  103 forprefix: FOR â€¢ LEFT_PAR elist SEMICOLON M expr SEMICOLON

    LEFT_PAR  shift, and go to state 51


State 8

   79 funcprefix: FUNCTION â€¢ funcname

    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 78 (funcname)

    funcname  go to state 53


State 9

  105 returnstmt: RETURN â€¢ SEMICOLON
  106           | RETURN â€¢ expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 54
    COL_COL         shift, and go to state 24

    expr        go to state 55
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 10

  110 break: BREAK â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 56


State 11

  111 continue: CONTINUE â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 57


State 12

   32 term: NOT â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 58
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 13

   45 lvalue: LOCAL â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 14

   89 const: TRUE â€¢

    $default  reduce using rule 89 (const)


State 15

   90 const: FALSE â€¢

    $default  reduce using rule 90 (const)


State 16

   88 const: NIL â€¢

    $default  reduce using rule 88 (const)


State 17

   31 term: OP_MINUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 18

   33 term: OP_PLUS_PLUS â€¢ lvalue

    IDENTIFIER  shift, and go to state 4
    LOCAL       shift, and go to state 13
    LEFT_PAR    shift, and go to state 61
    COL_COL     shift, and go to state 24

    lvalue     go to state 62
    tableitem  go to state 33
    member     go to state 34
    call       go to state 63


State 19

   35 term: OP_MINUS_MINUS â€¢ lvalue

    IDENTIFIER  shift, and go to state 4
    LOCAL       shift, and go to state 13
    LEFT_PAR    shift, and go to state 61
    COL_COL     shift, and go to state 24

    lvalue     go to state 64
    tableitem  go to state 33
    member     go to state 34
    call       go to state 63


State 20

   74 block: LEFT_BRACE â€¢ $@6 RIGHT_BRACE
   76      | LEFT_BRACE â€¢ $@7 stmts RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 73 ($@6)
    $default     reduce using rule 75 ($@7)

    $@6  go to state 65
    $@7  go to state 66


State 21

   68 tablemake: LEFT_BRACKET â€¢ elist RIGHT_BRACKET
   69          | LEFT_BRACKET â€¢ indexed RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 67
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr         go to state 68
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    tableitem    go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 69
    tablemake    go to state 36
    indexed      go to state 70
    indexedelem  go to state 71
    const        go to state 40


State 22

   30 term: LEFT_PAR â€¢ expr RIGHT_PAR
   42 primary: LEFT_PAR â€¢ funcdef RIGHT_PAR
   58 call: LEFT_PAR â€¢ funcdef RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 8
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 72
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    funcprefix  go to state 38
    funcdef     go to state 73
    const       go to state 40


State 23

   12 stmt: SEMICOLON â€¢

    $default  reduce using rule 12 (stmt)


State 24

   46 lvalue: COL_COL â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 74


State 25

    0 $accept: program â€¢ $end

    $end  shift, and go to state 75


State 26

   14 stmts: stmt â€¢

    $default  reduce using rule 14 (stmts)


State 27

    1 program: stmts â€¢
   13 stmts: stmts â€¢ stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 76
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 28

    3 stmt: expr â€¢ SEMICOLON
   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    SEMICOLON      shift, and go to state 90


State 29

   29 expr: term â€¢

    $default  reduce using rule 29 (expr)


State 30

   15 expr: assignexpr â€¢

    $default  reduce using rule 15 (expr)


State 31

   37 term: primary â€¢

    $default  reduce using rule 37 (term)


State 32

   34 term: lvalue â€¢ OP_PLUS_PLUS
   36     | lvalue â€¢ OP_MINUS_MINUS
   38 assignexpr: lvalue â€¢ OP_EQUALS expr
   39 primary: lvalue â€¢
   49 tableitem: lvalue â€¢ DOT IDENTIFIER
   50          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue â€¢ $@2 callsuffix

    OP_EQUALS       shift, and go to state 91
    OP_PLUS_PLUS    shift, and go to state 92
    OP_MINUS_MINUS  shift, and go to state 93
    LEFT_BRACKET    shift, and go to state 94
    DOT             shift, and go to state 95

    LEFT_PAR  reduce using rule 55 ($@2)
    DOT_DOT   reduce using rule 55 ($@2)
    $default  reduce using rule 39 (primary)

    $@2  go to state 96


State 33

   48 lvalue: tableitem â€¢

    $default  reduce using rule 48 (lvalue)


State 34

   47 lvalue: member â€¢

    $default  reduce using rule 47 (lvalue)


State 35

   40 primary: call â€¢
   51 member: call â€¢ DOT IDENTIFIER
   52       | call â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call â€¢ $@1 LEFT_PAR elist RIGHT_PAR

    LEFT_BRACKET  shift, and go to state 97
    DOT           shift, and go to state 98

    LEFT_PAR  reduce using rule 53 ($@1)
    $default  reduce using rule 40 (primary)

    $@1  go to state 99


State 36

   41 primary: tablemake â€¢

    $default  reduce using rule 41 (primary)


State 37

   10 stmt: block â€¢

    $default  reduce using rule 10 (stmt)


State 38

   82 funcdef: funcprefix â€¢ funcargs funcbody

    LEFT_PAR  shift, and go to state 100

    funcargs  go to state 101


State 39

   11 stmt: funcdef â€¢

    $default  reduce using rule 11 (stmt)


State 40

   43 primary: const â€¢

    $default  reduce using rule 43 (primary)


State 41

   96 if_stmt: ifprefix â€¢ stmt
   97        | ifprefix â€¢ stmt elseprefix stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 102
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 42

    4 stmt: if_stmt â€¢

    $default  reduce using rule 4 (stmt)


State 43

  100 while_stmt: whilestart â€¢ whilecond loopstmt

    LEFT_PAR  shift, and go to state 103

    whilecond  go to state 104


State 44

    5 stmt: while_stmt â€¢

    $default  reduce using rule 5 (stmt)


State 45

  104 for_stmt: forprefix â€¢ N elist RIGHT_PAR N loopstmt N

    $default  reduce using rule 101 (N)

    N  go to state 105


State 46

    6 stmt: for_stmt â€¢

    $default  reduce using rule 6 (stmt)


State 47

    7 stmt: returnstmt â€¢

    $default  reduce using rule 7 (stmt)


State 48

    8 stmt: break â€¢

    $default  reduce using rule 8 (stmt)


State 49

    9 stmt: continue â€¢

    $default  reduce using rule 9 (stmt)


State 50

   94 ifprefix: IF LEFT_PAR â€¢ expr RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 106
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 51

  103 forprefix: FOR LEFT_PAR â€¢ elist SEMICOLON M expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 107
    tablemake   go to state 36
    const       go to state 40


State 52

   77 funcname: IDENTIFIER â€¢

    $default  reduce using rule 77 (funcname)


State 53

   79 funcprefix: FUNCTION funcname â€¢

    $default  reduce using rule 79 (funcprefix)


State 54

  105 returnstmt: RETURN SEMICOLON â€¢

    $default  reduce using rule 105 (returnstmt)


State 55

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
  106 returnstmt: RETURN expr â€¢ SEMICOLON

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    SEMICOLON      shift, and go to state 108


State 56

  110 break: BREAK SEMICOLON â€¢

    $default  reduce using rule 110 (break)


State 57

  111 continue: CONTINUE SEMICOLON â€¢

    $default  reduce using rule 111 (continue)


State 58

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   32 term: NOT expr â€¢

    $default  reduce using rule 32 (term)


State 59

   45 lvalue: LOCAL IDENTIFIER â€¢

    $default  reduce using rule 45 (lvalue)


State 60

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   31 term: OP_MINUS expr â€¢

    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    $default  reduce using rule 31 (term)


State 61

   58 call: LEFT_PAR â€¢ funcdef RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR

    FUNCTION  shift, and go to state 8

    funcprefix  go to state 38
    funcdef     go to state 109


State 62

   33 term: OP_PLUS_PLUS lvalue â€¢
   49 tableitem: lvalue â€¢ DOT IDENTIFIER
   50          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue â€¢ $@2 callsuffix

    LEFT_BRACKET  shift, and go to state 94
    DOT           shift, and go to state 95

    LEFT_PAR  reduce using rule 55 ($@2)
    DOT_DOT   reduce using rule 55 ($@2)
    $default  reduce using rule 33 (term)

    $@2  go to state 96


State 63

   51 member: call â€¢ DOT IDENTIFIER
   52       | call â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   54 call: call â€¢ $@1 LEFT_PAR elist RIGHT_PAR

    LEFT_BRACKET  shift, and go to state 97
    DOT           shift, and go to state 98

    $default  reduce using rule 53 ($@1)

    $@1  go to state 99


State 64

   35 term: OP_MINUS_MINUS lvalue â€¢
   49 tableitem: lvalue â€¢ DOT IDENTIFIER
   50          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   56 call: lvalue â€¢ $@2 callsuffix

    LEFT_BRACKET  shift, and go to state 94
    DOT           shift, and go to state 95

    LEFT_PAR  reduce using rule 55 ($@2)
    DOT_DOT   reduce using rule 55 ($@2)
    $default  reduce using rule 35 (term)

    $@2  go to state 96


State 65

   74 block: LEFT_BRACE $@6 â€¢ RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 110


State 66

   76 block: LEFT_BRACE $@7 â€¢ stmts RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 26
    stmts       go to state 111
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 67

   72 indexedelem: LEFT_BRACE â€¢ expr COLON expr RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 68

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   65 elist: expr â€¢

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    $default  reduce using rule 65 (elist)


State 69

   66 elist: elist â€¢ COMMA expr
   68 tablemake: LEFT_BRACKET elist â€¢ RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 113
    COMMA          shift, and go to state 114


State 70

   69 tablemake: LEFT_BRACKET indexed â€¢ RIGHT_BRACKET
   71 indexed: indexed â€¢ COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 115
    COMMA          shift, and go to state 116


State 71

   70 indexed: indexedelem â€¢

    $default  reduce using rule 70 (indexed)


State 72

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   30 term: LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_PAR      shift, and go to state 117


State 73

   42 primary: LEFT_PAR funcdef â€¢ RIGHT_PAR
   58 call: LEFT_PAR funcdef â€¢ RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 118


State 74

   46 lvalue: COL_COL IDENTIFIER â€¢

    $default  reduce using rule 46 (lvalue)


State 75

    0 $accept: program $end â€¢

    $default  accept


State 76

   13 stmts: stmts stmt â€¢

    $default  reduce using rule 13 (stmts)


State 77

   27 expr: expr AND â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 78

   28 expr: expr OR â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 79

   16 expr: expr OP_PLUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 80

   17 expr: expr OP_MINUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 81

   18 expr: expr OP_ASTERISK â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 82

   19 expr: expr OP_SLASH â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 83

   20 expr: expr OP_PERCENTAGE â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 84

   25 expr: expr OP_EQ_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 85

   26 expr: expr OP_NOT_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 86

   21 expr: expr OP_GREATER â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 87

   23 expr: expr OP_LESSER â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 88

   22 expr: expr OP_GREATER_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 89

   24 expr: expr OP_LESSER_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 90

    3 stmt: expr SEMICOLON â€¢

    $default  reduce using rule 3 (stmt)


State 91

   38 assignexpr: lvalue OP_EQUALS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 92

   34 term: lvalue OP_PLUS_PLUS â€¢

    $default  reduce using rule 34 (term)


State 93

   36 term: lvalue OP_MINUS_MINUS â€¢

    $default  reduce using rule 36 (term)


State 94

   50 tableitem: lvalue LEFT_BRACKET â€¢ expr RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 95

   49 tableitem: lvalue DOT â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 134


State 96

   56 call: lvalue $@2 â€¢ callsuffix

    LEFT_PAR  shift, and go to state 135
    DOT_DOT   shift, and go to state 136

    callsuffix  go to state 137
    normcall    go to state 138
    methodcall  go to state 139


State 97

   52 member: call LEFT_BRACKET â€¢ expr RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 140
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 98

   51 member: call DOT â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 141


State 99

   54 call: call $@1 â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 142


State 100

   80 funcargs: LEFT_PAR â€¢ idlist RIGHT_PAR

    IDENTIFIER  shift, and go to state 143

    $default  reduce using rule 93 (idlist)

    idlist  go to state 144


State 101

   82 funcdef: funcprefix funcargs â€¢ funcbody

    $default  reduce using rule 83 (funcblockstart)

    funcbody        go to state 145
    funcblockstart  go to state 146


State 102

   96 if_stmt: ifprefix stmt â€¢
   97        | ifprefix stmt â€¢ elseprefix stmt

    ELSE  shift, and go to state 147

    ELSE      [reduce using rule 96 (if_stmt)]
    $default  reduce using rule 96 (if_stmt)

    elseprefix  go to state 148


State 103

   99 whilecond: LEFT_PAR â€¢ expr RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 149
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 104

  100 while_stmt: whilestart whilecond â€¢ loopstmt

    $default  reduce using rule 107 (loopstart)

    loopstart  go to state 150
    loopstmt   go to state 151


State 105

  104 for_stmt: forprefix N â€¢ elist RIGHT_PAR N loopstmt N

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 152
    tablemake   go to state 36
    const       go to state 40


State 106

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   94 ifprefix: IF LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_PAR      shift, and go to state 153


State 107

   66 elist: elist â€¢ COMMA expr
  103 forprefix: FOR LEFT_PAR elist â€¢ SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 154
    COMMA      shift, and go to state 114


State 108

  106 returnstmt: RETURN expr SEMICOLON â€¢

    $default  reduce using rule 106 (returnstmt)


State 109

   58 call: LEFT_PAR funcdef â€¢ RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 155


State 110

   74 block: LEFT_BRACE $@6 RIGHT_BRACE â€¢

    $default  reduce using rule 74 (block)


State 111

   13 stmts: stmts â€¢ stmt
   76 block: LEFT_BRACE $@7 stmts â€¢ RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    RIGHT_BRACE     shift, and go to state 156
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 76
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 112

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   72 indexedelem: LEFT_BRACE expr â€¢ COLON expr RIGHT_BRACE

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    COLON          shift, and go to state 157


State 113

   68 tablemake: LEFT_BRACKET elist RIGHT_BRACKET â€¢

    $default  reduce using rule 68 (tablemake)


State 114

   66 elist: elist COMMA â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 158
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 115

   69 tablemake: LEFT_BRACKET indexed RIGHT_BRACKET â€¢

    $default  reduce using rule 69 (tablemake)


State 116

   71 indexed: indexed COMMA â€¢ indexedelem

    LEFT_BRACE  shift, and go to state 67

    indexedelem  go to state 159


State 117

   30 term: LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 30 (term)


State 118

   42 primary: LEFT_PAR funcdef RIGHT_PAR â€¢
   58 call: LEFT_PAR funcdef RIGHT_PAR â€¢ $@3 LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  reduce using rule 57 ($@3)
    $default  reduce using rule 42 (primary)

    $@3  go to state 160


State 119

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   27     | expr AND expr â€¢
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    $default  reduce using rule 27 (expr)


State 120

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   28     | expr OR expr â€¢

    AND            shift, and go to state 77
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    $default  reduce using rule 28 (expr)


State 121

   16 expr: expr â€¢ OP_PLUS expr
   16     | expr OP_PLUS expr â€¢
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    $default  reduce using rule 16 (expr)


State 122

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   17     | expr OP_MINUS expr â€¢
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    $default  reduce using rule 17 (expr)


State 123

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   18     | expr OP_ASTERISK expr â€¢
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    $default  reduce using rule 18 (expr)


State 124

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   19     | expr OP_SLASH expr â€¢
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    $default  reduce using rule 19 (expr)


State 125

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   20     | expr OP_PERCENTAGE expr â€¢
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    $default  reduce using rule 20 (expr)


State 126

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   25     | expr OP_EQ_EQ expr â€¢
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    OP_EQ_EQ   error (nonassociative)
    OP_NOT_EQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 127

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   26     | expr OP_NOT_EQ expr â€¢
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    OP_EQ_EQ   error (nonassociative)
    OP_NOT_EQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 128

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   21     | expr OP_GREATER expr â€¢
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 129

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   23     | expr OP_LESSER expr â€¢
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 130

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   22     | expr OP_GREATER_EQ expr â€¢
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 131

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   24     | expr OP_LESSER_EQ expr â€¢
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   38 assignexpr: lvalue OP_EQUALS expr â€¢

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    $default  reduce using rule 38 (assignexpr)


State 133

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   50 tableitem: lvalue LEFT_BRACKET expr â€¢ RIGHT_BRACKET

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_BRACKET  shift, and go to state 161


State 134

   49 tableitem: lvalue DOT IDENTIFIER â€¢

    $default  reduce using rule 49 (tableitem)


State 135

   62 normcall: LEFT_PAR â€¢ $@4 elist RIGHT_PAR

    $default  reduce using rule 61 ($@4)

    $@4  go to state 162


State 136

   64 methodcall: DOT_DOT â€¢ $@5 IDENTIFIER LEFT_PAR elist RIGHT_PAR

    $default  reduce using rule 63 ($@5)

    $@5  go to state 163


State 137

   56 call: lvalue $@2 callsuffix â€¢

    $default  reduce using rule 56 (call)


State 138

   59 callsuffix: normcall â€¢

    $default  reduce using rule 59 (callsuffix)


State 139

   60 callsuffix: methodcall â€¢

    $default  reduce using rule 60 (callsuffix)


State 140

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   52 member: call LEFT_BRACKET expr â€¢ RIGHT_BRACKET

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_BRACKET  shift, and go to state 164


State 141

   51 member: call DOT IDENTIFIER â€¢

    $default  reduce using rule 51 (member)


State 142

   54 call: call $@1 LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 165
    tablemake   go to state 36
    const       go to state 40


State 143

   91 idlist: IDENTIFIER â€¢

    $default  reduce using rule 91 (idlist)


State 144

   80 funcargs: LEFT_PAR idlist â€¢ RIGHT_PAR
   92 idlist: idlist â€¢ COMMA IDENTIFIER

    RIGHT_PAR  shift, and go to state 166
    COMMA      shift, and go to state 167


State 145

   82 funcdef: funcprefix funcargs funcbody â€¢

    $default  reduce using rule 82 (funcdef)


State 146

   81 funcbody: funcblockstart â€¢ block funcblockend

    LEFT_BRACE  shift, and go to state 20

    block  go to state 168


State 147

   95 elseprefix: ELSE â€¢

    $default  reduce using rule 95 (elseprefix)


State 148

   97 if_stmt: ifprefix stmt elseprefix â€¢ stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 169
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 149

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   99 whilecond: LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_PAR      shift, and go to state 170


State 150

  109 loopstmt: loopstart â€¢ stmt loopend

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 171
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    block       go to state 37
    funcprefix  go to state 38
    funcdef     go to state 39
    const       go to state 40
    ifprefix    go to state 41
    if_stmt     go to state 42
    whilestart  go to state 43
    while_stmt  go to state 44
    forprefix   go to state 45
    for_stmt    go to state 46
    returnstmt  go to state 47
    break       go to state 48
    continue    go to state 49


State 151

  100 while_stmt: whilestart whilecond loopstmt â€¢

    $default  reduce using rule 100 (while_stmt)


State 152

   66 elist: elist â€¢ COMMA expr
  104 for_stmt: forprefix N elist â€¢ RIGHT_PAR N loopstmt N

    RIGHT_PAR  shift, and go to state 172
    COMMA      shift, and go to state 114


State 153

   94 ifprefix: IF LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 94 (ifprefix)


State 154

  103 forprefix: FOR LEFT_PAR elist SEMICOLON â€¢ M expr SEMICOLON

    $default  reduce using rule 102 (M)

    M  go to state 173


State 155

   58 call: LEFT_PAR funcdef RIGHT_PAR â€¢ $@3 LEFT_PAR elist RIGHT_PAR

    $default  reduce using rule 57 ($@3)

    $@3  go to state 160


State 156

   76 block: LEFT_BRACE $@7 stmts RIGHT_BRACE â€¢

    $default  reduce using rule 76 (block)


State 157

   72 indexedelem: LEFT_BRACE expr COLON â€¢ expr RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 174
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 158

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   66 elist: elist COMMA expr â€¢

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89

    $default  reduce using rule 66 (elist)


State 159

   71 indexed: indexed COMMA indexedelem â€¢

    $default  reduce using rule 71 (indexed)


State 160

   58 call: LEFT_PAR funcdef RIGHT_PAR $@3 â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 175


State 161

   50 tableitem: lvalue LEFT_BRACKET expr RIGHT_BRACKET â€¢

    $default  reduce using rule 50 (tableitem)


State 162

   62 normcall: LEFT_PAR $@4 â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 176
    tablemake   go to state 36
    const       go to state 40


State 163

   64 methodcall: DOT_DOT $@5 â€¢ IDENTIFIER LEFT_PAR elist RIGHT_PAR

    IDENTIFIER  shift, and go to state 177


State 164

   52 member: call LEFT_BRACKET expr RIGHT_BRACKET â€¢

    $default  reduce using rule 52 (member)


State 165

   54 call: call $@1 LEFT_PAR elist â€¢ RIGHT_PAR
   66 elist: elist â€¢ COMMA expr

    RIGHT_PAR  shift, and go to state 178
    COMMA      shift, and go to state 114


State 166

   80 funcargs: LEFT_PAR idlist RIGHT_PAR â€¢

    $default  reduce using rule 80 (funcargs)


State 167

   92 idlist: idlist COMMA â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 179


State 168

   81 funcbody: funcblockstart block â€¢ funcblockend

    $default  reduce using rule 84 (funcblockend)

    funcblockend  go to state 180


State 169

   97 if_stmt: ifprefix stmt elseprefix stmt â€¢

    $default  reduce using rule 97 (if_stmt)


State 170

   99 whilecond: LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 99 (whilecond)


State 171

  109 loopstmt: loopstart stmt â€¢ loopend

    $default  reduce using rule 108 (loopend)

    loopend  go to state 181


State 172

  104 for_stmt: forprefix N elist RIGHT_PAR â€¢ N loopstmt N

    $default  reduce using rule 101 (N)

    N  go to state 182


State 173

  103 forprefix: FOR LEFT_PAR elist SEMICOLON M â€¢ expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 183
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    tablemake   go to state 36
    const       go to state 40


State 174

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
   72 indexedelem: LEFT_BRACE expr COLON expr â€¢ RIGHT_BRACE

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    RIGHT_BRACE    shift, and go to state 184


State 175

   58 call: LEFT_PAR funcdef RIGHT_PAR $@3 LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 185
    tablemake   go to state 36
    const       go to state 40


State 176

   62 normcall: LEFT_PAR $@4 elist â€¢ RIGHT_PAR
   66 elist: elist â€¢ COMMA expr

    RIGHT_PAR  shift, and go to state 186
    COMMA      shift, and go to state 114


State 177

   64 methodcall: DOT_DOT $@5 IDENTIFIER â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 187


State 178

   54 call: call $@1 LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 54 (call)


State 179

   92 idlist: idlist COMMA IDENTIFIER â€¢

    $default  reduce using rule 92 (idlist)


State 180

   81 funcbody: funcblockstart block funcblockend â€¢

    $default  reduce using rule 81 (funcbody)


State 181

  109 loopstmt: loopstart stmt loopend â€¢

    $default  reduce using rule 109 (loopstmt)


State 182

  104 for_stmt: forprefix N elist RIGHT_PAR N â€¢ loopstmt N

    $default  reduce using rule 107 (loopstart)

    loopstart  go to state 150
    loopstmt   go to state 188


State 183

   16 expr: expr â€¢ OP_PLUS expr
   17     | expr â€¢ OP_MINUS expr
   18     | expr â€¢ OP_ASTERISK expr
   19     | expr â€¢ OP_SLASH expr
   20     | expr â€¢ OP_PERCENTAGE expr
   21     | expr â€¢ OP_GREATER expr
   22     | expr â€¢ OP_GREATER_EQ expr
   23     | expr â€¢ OP_LESSER expr
   24     | expr â€¢ OP_LESSER_EQ expr
   25     | expr â€¢ OP_EQ_EQ expr
   26     | expr â€¢ OP_NOT_EQ expr
   27     | expr â€¢ AND expr
   28     | expr â€¢ OR expr
  103 forprefix: FOR LEFT_PAR elist SEMICOLON M expr â€¢ SEMICOLON

    AND            shift, and go to state 77
    OR             shift, and go to state 78
    OP_PLUS        shift, and go to state 79
    OP_MINUS       shift, and go to state 80
    OP_ASTERISK    shift, and go to state 81
    OP_SLASH       shift, and go to state 82
    OP_PERCENTAGE  shift, and go to state 83
    OP_EQ_EQ       shift, and go to state 84
    OP_NOT_EQ      shift, and go to state 85
    OP_GREATER     shift, and go to state 86
    OP_LESSER      shift, and go to state 87
    OP_GREATER_EQ  shift, and go to state 88
    OP_LESSER_EQ   shift, and go to state 89
    SEMICOLON      shift, and go to state 189


State 184

   72 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE â€¢

    $default  reduce using rule 72 (indexedelem)


State 185

   58 call: LEFT_PAR funcdef RIGHT_PAR $@3 LEFT_PAR elist â€¢ RIGHT_PAR
   66 elist: elist â€¢ COMMA expr

    RIGHT_PAR  shift, and go to state 190
    COMMA      shift, and go to state 114


State 186

   62 normcall: LEFT_PAR $@4 elist RIGHT_PAR â€¢

    $default  reduce using rule 62 (normcall)


State 187

   64 methodcall: DOT_DOT $@5 IDENTIFIER LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 67 (elist)

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    tableitem   go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 191
    tablemake   go to state 36
    const       go to state 40


State 188

  104 for_stmt: forprefix N elist RIGHT_PAR N loopstmt â€¢ N

    $default  reduce using rule 101 (N)

    N  go to state 192


State 189

  103 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON â€¢

    $default  reduce using rule 103 (forprefix)


State 190

   58 call: LEFT_PAR funcdef RIGHT_PAR $@3 LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 58 (call)


State 191

   64 methodcall: DOT_DOT $@5 IDENTIFIER LEFT_PAR elist â€¢ RIGHT_PAR
   66 elist: elist â€¢ COMMA expr

    RIGHT_PAR  shift, and go to state 193
    COMMA      shift, and go to state 114


State 192

  104 for_stmt: forprefix N elist RIGHT_PAR N loopstmt N â€¢

    $default  reduce using rule 104 (for_stmt)


State 193

   64 methodcall: DOT_DOT $@5 IDENTIFIER LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 64 (methodcall)
