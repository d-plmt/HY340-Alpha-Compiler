Nonterminals useless in grammar

    stmts
    while_stmt
    loopstart
    loopend
    loopstmt
    break
    continue


Terminals unused in grammar

    LINE_COMM


Rules useless in grammar

  110 stmts: stmt
  111      | stmts stmt

  112 while_stmt: while LEFT_PAR expr RIGHT_PAR loopstmt

  113 loopstart: %empty

  114 loopend: %empty

  115 loopstmt: loopstart stmt loopend

  116 break: BREAK SEMICOLON

  117 continue: CONTINUE SEMICOLON


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: stmt $@1 program
    3        | %empty

    4 stmt: expr SEMICOLON
    5     | if_stmt
    6     | while
    7     | for_stmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr OP_PLUS expr
   16     | expr OP_MINUS expr
   17     | expr OP_ASTERISK expr
   18     | expr OP_SLASH expr
   19     | expr OP_PERCENTAGE expr
   20     | expr OP_GREATER expr
   21     | expr OP_GREATER_EQ expr
   22     | expr OP_LESSER expr
   23     | expr OP_LESSER_EQ expr
   24     | expr OP_EQ_EQ expr
   25     | expr OP_NOT_EQ expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: LEFT_PAR expr RIGHT_PAR
   30     | OP_MINUS expr
   31     | NOT expr
   32     | OP_PLUS_PLUS lvalue
   33     | lvalue OP_PLUS_PLUS
   34     | OP_MINUS_MINUS lvalue
   35     | lvalue OP_MINUS_MINUS
   36     | primary

   37 assignexpr: lvalue OP_EQUALS expr

   38 primary: lvalue
   39        | call
   40        | tablemake
   41        | LEFT_PAR funcdef RIGHT_PAR
   42        | const

   43 lvalue: IDENTIFIER
   44       | LOCAL IDENTIFIER
   45       | COL_COL IDENTIFIER
   46       | member
   47       | tableitem

   48 tableitem: lvalue DOT IDENTIFIER
   49          | lvalue LEFT_BRACKET expr RIGHT_BRACKET

   50 member: call DOT IDENTIFIER
   51       | call LEFT_BRACKET expr RIGHT_BRACKET

   52 $@2: %empty

   53 call: call $@2 LEFT_PAR elist RIGHT_PAR

   54 $@3: %empty

   55 call: lvalue $@3 callsuffix

   56 $@4: %empty

   57 call: LEFT_PAR funcdef RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR

   58 callsuffix: normcall
   59           | methodcall

   60 $@5: %empty

   61 normcall: LEFT_PAR $@5 elist RIGHT_PAR

   62 $@6: %empty

   63 methodcall: DOT_DOT $@6 IDENTIFIER LEFT_PAR elist RIGHT_PAR

   64 elist: expr
   65      | expr COMMA elist
   66      | %empty

   67 tablemake: LEFT_BRACKET elist RIGHT_BRACKET
   68          | LEFT_BRACKET indexed RIGHT_BRACKET

   69 indexed: indexedelem
   70        | indexedelem COMMA indexed

   71 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   72 func_stmt: stmt func_stmt
   73          | stmt

   74 $@7: %empty

   75 block: LEFT_BRACE $@7 RIGHT_BRACE

   76 $@8: %empty

   77 $@9: %empty

   78 block: LEFT_BRACE $@8 func_stmt RIGHT_BRACE $@9

   79 funcname: IDENTIFIER
   80         | %empty

   81 funcprefix: FUNCTION funcname

   82 funcargs: LEFT_PAR idlist RIGHT_PAR

   83 funcbody: block

   84 funcdef: funcprefix funcargs funcbody
   85        | FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend

   86 funcblockstart: %empty

   87 funcblockend: %empty

   88 const: INTEGER
   89      | REAL
   90      | STRING
   91      | NIL
   92      | TRUE
   93      | FALSE

   94 idlist: IDENTIFIER
   95       | IDENTIFIER COMMA idlist
   96       | %empty

   97 ifprefix: IF LEFT_PAR expr RIGHT_PAR

   98 elseprefix: ELSE

   99 if_stmt: ifprefix stmt
  100        | ifprefix stmt elseprefix stmt

  101 whilestart: WHILE

  102 whilecond: LEFT_PAR expr RIGHT_PAR

  103 while: whilestart whilecond stmt

  104 N: %empty

  105 M: %empty

  106 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON

  107 for_stmt: forprefix N elist RIGHT_PAR N stmt N

  108 returnstmt: RETURN SEMICOLON
  109           | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <intVal> (258) 88
    REAL <realVal> (259) 89
    STRING <strVal> (260) 90
    IDENTIFIER <strVal> (261) 43 44 45 48 50 63 79 85 94 95
    IF <strVal> (262) 97
    ELSE <strVal> (263) 98
    WHILE <strVal> (264) 101
    FOR <strVal> (265) 106
    FUNCTION <strVal> (266) 81 85
    RETURN <strVal> (267) 108 109
    BREAK <strVal> (268) 9
    CONTINUE <strVal> (269) 10
    AND <strVal> (270) 26
    NOT <strVal> (271) 31
    OR <strVal> (272) 27
    LOCAL <strVal> (273) 44
    TRUE <strVal> (274) 92
    FALSE <strVal> (275) 93
    NIL <strVal> (276) 91
    OP_EQUALS <strVal> (277) 37
    OP_PLUS <strVal> (278) 15
    OP_MINUS <strVal> (279) 16 30
    OP_ASTERISK <strVal> (280) 17
    OP_SLASH <strVal> (281) 18
    OP_PERCENTAGE <strVal> (282) 19
    OP_EQ_EQ <strVal> (283) 24
    OP_NOT_EQ <strVal> (284) 25
    OP_PLUS_PLUS <strVal> (285) 32 33
    OP_MINUS_MINUS <strVal> (286) 34 35
    OP_GREATER <strVal> (287) 20
    OP_LESSER <strVal> (288) 22
    OP_GREATER_EQ <strVal> (289) 21
    OP_LESSER_EQ <strVal> (290) 23
    LEFT_BRACE <strVal> (291) 71 75 78 85
    RIGHT_BRACE <strVal> (292) 71 75 78 85
    LEFT_BRACKET <strVal> (293) 49 51 67 68
    RIGHT_BRACKET <strVal> (294) 49 51 67 68
    LEFT_PAR <strVal> (295) 29 41 53 57 61 63 82 85 97 102 106
    RIGHT_PAR <strVal> (296) 29 41 53 57 61 63 82 85 97 102 107
    SEMICOLON <strVal> (297) 4 9 10 13 106 108 109
    COMMA <strVal> (298) 65 70 95
    COLON <strVal> (299) 71
    COL_COL <strVal> (300) 45
    DOT <strVal> (301) 48 50
    DOT_DOT <strVal> (302) 63
    LINE_COMM <strVal> (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 2 3
        on right: 0 2
    $@1 (51)
        on left: 1
        on right: 2
    stmt <stmtVal> (52)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 72 73 99 100 103 107
    expr <exprVal> (53)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 49 51 64 65 71 97 102 106 109
    term <exprVal> (54)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <exprVal> (55)
        on left: 37
        on right: 14
    primary <exprVal> (56)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <exprVal> (57)
        on left: 43 44 45 46 47
        on right: 32 33 34 35 37 38 48 49 55
    tableitem <exprVal> (58)
        on left: 48 49
        on right: 47
    member <exprVal> (59)
        on left: 50 51
        on right: 46
    call <exprVal> (60)
        on left: 53 55 57
        on right: 39 50 51 53
    $@2 (61)
        on left: 52
        on right: 53
    $@3 (62)
        on left: 54
        on right: 55
    $@4 (63)
        on left: 56
        on right: 57
    callsuffix <callVal> (64)
        on left: 58 59
        on right: 55
    normcall <callVal> (65)
        on left: 61
        on right: 58
    $@5 (66)
        on left: 60
        on right: 61
    methodcall <callVal> (67)
        on left: 63
        on right: 59
    $@6 (68)
        on left: 62
        on right: 63
    elist <exprVal> (69)
        on left: 64 65 66
        on right: 53 57 61 63 65 67 106 107
    tablemake <exprVal> (70)
        on left: 67 68
        on right: 40
    indexed <indexedVal> (71)
        on left: 69 70
        on right: 68 70
    indexedelem <indexedVal> (72)
        on left: 71
        on right: 69 70
    func_stmt (73)
        on left: 72 73
        on right: 72 78
    block (74)
        on left: 75 78
        on right: 11 83 85
    $@7 (75)
        on left: 74
        on right: 75
    $@8 (76)
        on left: 76
        on right: 78
    $@9 (77)
        on left: 77
        on right: 78
    funcname <strVal> (78)
        on left: 79 80
        on right: 81
    funcprefix <symtVal> (79)
        on left: 81
        on right: 84
    funcargs (80)
        on left: 82
        on right: 84
    funcbody <uintVal> (81)
        on left: 83
        on right: 84
    funcdef <symtVal> (82)
        on left: 84 85
        on right: 12 41 57
    funcblockstart (83)
        on left: 86
        on right: 85
    funcblockend (84)
        on left: 87
        on right: 85
    const <exprVal> (85)
        on left: 88 89 90 91 92 93
        on right: 42
    idlist (86)
        on left: 94 95 96
        on right: 82 85 95
    ifprefix <intVal> (87)
        on left: 97
        on right: 99 100
    elseprefix <intVal> (88)
        on left: 98
        on right: 100
    if_stmt (89)
        on left: 99 100
        on right: 5
    whilestart <intVal> (90)
        on left: 101
        on right: 103
    whilecond <intVal> (91)
        on left: 102
        on right: 103
    while (92)
        on left: 103
        on right: 6
    N <intVal> (93)
        on left: 104
        on right: 107
    M <intVal> (94)
        on left: 105
        on right: 106
    forprefix <forprefixVal> (95)
        on left: 106
        on right: 107
    for_stmt (96)
        on left: 107
        on right: 7
    returnstmt (97)
        on left: 108 109
        on right: 8


State 0

    0 $accept: â€¢ program $end

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    $default  reduce using rule 3 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 1

   88 const: INTEGER â€¢

    $default  reduce using rule 88 (const)


State 2

   89 const: REAL â€¢

    $default  reduce using rule 89 (const)


State 3

   90 const: STRING â€¢

    $default  reduce using rule 90 (const)


State 4

   43 lvalue: IDENTIFIER â€¢

    $default  reduce using rule 43 (lvalue)


State 5

   97 ifprefix: IF â€¢ LEFT_PAR expr RIGHT_PAR

    LEFT_PAR  shift, and go to state 47


State 6

  101 whilestart: WHILE â€¢

    $default  reduce using rule 101 (whilestart)


State 7

  106 forprefix: FOR â€¢ LEFT_PAR elist SEMICOLON M expr SEMICOLON

    LEFT_PAR  shift, and go to state 48


State 8

   81 funcprefix: FUNCTION â€¢ funcname
   85 funcdef: FUNCTION â€¢ LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend

    IDENTIFIER  shift, and go to state 49
    LEFT_BRACE  shift, and go to state 50

    $default  reduce using rule 80 (funcname)

    funcname  go to state 51


State 9

  108 returnstmt: RETURN â€¢ SEMICOLON
  109           | RETURN â€¢ expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 52
    COL_COL         shift, and go to state 24

    expr        go to state 53
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 10

    9 stmt: BREAK â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 54


State 11

   10 stmt: CONTINUE â€¢ SEMICOLON

    SEMICOLON  shift, and go to state 55


State 12

   31 term: NOT â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 56
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 13

   44 lvalue: LOCAL â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 14

   92 const: TRUE â€¢

    $default  reduce using rule 92 (const)


State 15

   93 const: FALSE â€¢

    $default  reduce using rule 93 (const)


State 16

   91 const: NIL â€¢

    $default  reduce using rule 91 (const)


State 17

   30 term: OP_MINUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 58
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 18

   32 term: OP_PLUS_PLUS â€¢ lvalue

    IDENTIFIER  shift, and go to state 4
    LOCAL       shift, and go to state 13
    LEFT_PAR    shift, and go to state 59
    COL_COL     shift, and go to state 24

    lvalue     go to state 60
    tableitem  go to state 32
    member     go to state 33
    call       go to state 61


State 19

   34 term: OP_MINUS_MINUS â€¢ lvalue

    IDENTIFIER  shift, and go to state 4
    LOCAL       shift, and go to state 13
    LEFT_PAR    shift, and go to state 59
    COL_COL     shift, and go to state 24

    lvalue     go to state 62
    tableitem  go to state 32
    member     go to state 33
    call       go to state 61


State 20

   75 block: LEFT_BRACE â€¢ $@7 RIGHT_BRACE
   78      | LEFT_BRACE â€¢ $@8 func_stmt RIGHT_BRACE $@9

    RIGHT_BRACE  reduce using rule 74 ($@7)
    $default     reduce using rule 76 ($@8)

    $@7  go to state 63
    $@8  go to state 64


State 21

   67 tablemake: LEFT_BRACKET â€¢ elist RIGHT_BRACKET
   68          | LEFT_BRACKET â€¢ indexed RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 65
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr         go to state 66
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    tableitem    go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 67
    tablemake    go to state 35
    indexed      go to state 68
    indexedelem  go to state 69
    const        go to state 39


State 22

   29 term: LEFT_PAR â€¢ expr RIGHT_PAR
   41 primary: LEFT_PAR â€¢ funcdef RIGHT_PAR
   57 call: LEFT_PAR â€¢ funcdef RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    FUNCTION        shift, and go to state 8
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 70
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    funcprefix  go to state 37
    funcdef     go to state 71
    const       go to state 39


State 23

   13 stmt: SEMICOLON â€¢

    $default  reduce using rule 13 (stmt)


State 24

   45 lvalue: COL_COL â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 72


State 25

    0 $accept: program â€¢ $end

    $end  shift, and go to state 73


State 26

    2 program: stmt â€¢ $@1 program

    $default  reduce using rule 1 ($@1)

    $@1  go to state 74


State 27

    4 stmt: expr â€¢ SEMICOLON
   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    SEMICOLON      shift, and go to state 88


State 28

   28 expr: term â€¢

    $default  reduce using rule 28 (expr)


State 29

   14 expr: assignexpr â€¢

    $default  reduce using rule 14 (expr)


State 30

   36 term: primary â€¢

    $default  reduce using rule 36 (term)


State 31

   33 term: lvalue â€¢ OP_PLUS_PLUS
   35     | lvalue â€¢ OP_MINUS_MINUS
   37 assignexpr: lvalue â€¢ OP_EQUALS expr
   38 primary: lvalue â€¢
   48 tableitem: lvalue â€¢ DOT IDENTIFIER
   49          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   55 call: lvalue â€¢ $@3 callsuffix

    OP_EQUALS       shift, and go to state 89
    OP_PLUS_PLUS    shift, and go to state 90
    OP_MINUS_MINUS  shift, and go to state 91
    LEFT_BRACKET    shift, and go to state 92
    DOT             shift, and go to state 93

    LEFT_PAR  reduce using rule 54 ($@3)
    DOT_DOT   reduce using rule 54 ($@3)
    $default  reduce using rule 38 (primary)

    $@3  go to state 94


State 32

   47 lvalue: tableitem â€¢

    $default  reduce using rule 47 (lvalue)


State 33

   46 lvalue: member â€¢

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call â€¢
   50 member: call â€¢ DOT IDENTIFIER
   51       | call â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   53 call: call â€¢ $@2 LEFT_PAR elist RIGHT_PAR

    LEFT_BRACKET  shift, and go to state 95
    DOT           shift, and go to state 96

    LEFT_PAR  reduce using rule 52 ($@2)
    $default  reduce using rule 39 (primary)

    $@2  go to state 97


State 35

   40 primary: tablemake â€¢

    $default  reduce using rule 40 (primary)


State 36

   11 stmt: block â€¢

    $default  reduce using rule 11 (stmt)


State 37

   84 funcdef: funcprefix â€¢ funcargs funcbody

    LEFT_PAR  shift, and go to state 98

    funcargs  go to state 99


State 38

   12 stmt: funcdef â€¢

    $default  reduce using rule 12 (stmt)


State 39

   42 primary: const â€¢

    $default  reduce using rule 42 (primary)


State 40

   99 if_stmt: ifprefix â€¢ stmt
  100        | ifprefix â€¢ stmt elseprefix stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 100
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 41

    5 stmt: if_stmt â€¢

    $default  reduce using rule 5 (stmt)


State 42

  103 while: whilestart â€¢ whilecond stmt

    LEFT_PAR  shift, and go to state 101

    whilecond  go to state 102


State 43

    6 stmt: while â€¢

    $default  reduce using rule 6 (stmt)


State 44

  107 for_stmt: forprefix â€¢ N elist RIGHT_PAR N stmt N

    $default  reduce using rule 104 (N)

    N  go to state 103


State 45

    7 stmt: for_stmt â€¢

    $default  reduce using rule 7 (stmt)


State 46

    8 stmt: returnstmt â€¢

    $default  reduce using rule 8 (stmt)


State 47

   97 ifprefix: IF LEFT_PAR â€¢ expr RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 104
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 48

  106 forprefix: FOR LEFT_PAR â€¢ elist SEMICOLON M expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 105
    tablemake   go to state 35
    const       go to state 39


State 49

   79 funcname: IDENTIFIER â€¢

    $default  reduce using rule 79 (funcname)


State 50

   85 funcdef: FUNCTION LEFT_BRACE â€¢ IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend

    IDENTIFIER  shift, and go to state 106


State 51

   81 funcprefix: FUNCTION funcname â€¢

    $default  reduce using rule 81 (funcprefix)


State 52

  108 returnstmt: RETURN SEMICOLON â€¢

    $default  reduce using rule 108 (returnstmt)


State 53

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
  109 returnstmt: RETURN expr â€¢ SEMICOLON

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    SEMICOLON      shift, and go to state 107


State 54

    9 stmt: BREAK SEMICOLON â€¢

    $default  reduce using rule 9 (stmt)


State 55

   10 stmt: CONTINUE SEMICOLON â€¢

    $default  reduce using rule 10 (stmt)


State 56

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   31 term: NOT expr â€¢

    $default  reduce using rule 31 (term)


State 57

   44 lvalue: LOCAL IDENTIFIER â€¢

    $default  reduce using rule 44 (lvalue)


State 58

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   30 term: OP_MINUS expr â€¢

    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    $default  reduce using rule 30 (term)


State 59

   57 call: LEFT_PAR â€¢ funcdef RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR

    FUNCTION  shift, and go to state 8

    funcprefix  go to state 37
    funcdef     go to state 108


State 60

   32 term: OP_PLUS_PLUS lvalue â€¢
   48 tableitem: lvalue â€¢ DOT IDENTIFIER
   49          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   55 call: lvalue â€¢ $@3 callsuffix

    LEFT_BRACKET  shift, and go to state 92
    DOT           shift, and go to state 93

    LEFT_PAR  reduce using rule 54 ($@3)
    DOT_DOT   reduce using rule 54 ($@3)
    $default  reduce using rule 32 (term)

    $@3  go to state 94


State 61

   50 member: call â€¢ DOT IDENTIFIER
   51       | call â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   53 call: call â€¢ $@2 LEFT_PAR elist RIGHT_PAR

    LEFT_BRACKET  shift, and go to state 95
    DOT           shift, and go to state 96

    $default  reduce using rule 52 ($@2)

    $@2  go to state 97


State 62

   34 term: OP_MINUS_MINUS lvalue â€¢
   48 tableitem: lvalue â€¢ DOT IDENTIFIER
   49          | lvalue â€¢ LEFT_BRACKET expr RIGHT_BRACKET
   55 call: lvalue â€¢ $@3 callsuffix

    LEFT_BRACKET  shift, and go to state 92
    DOT           shift, and go to state 93

    LEFT_PAR  reduce using rule 54 ($@3)
    DOT_DOT   reduce using rule 54 ($@3)
    $default  reduce using rule 34 (term)

    $@3  go to state 94


State 63

   75 block: LEFT_BRACE $@7 â€¢ RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 109


State 64

   78 block: LEFT_BRACE $@8 â€¢ func_stmt RIGHT_BRACE $@9

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 110
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    func_stmt   go to state 111
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 65

   71 indexedelem: LEFT_BRACE â€¢ expr COLON expr RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 112
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 66

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   64 elist: expr â€¢
   65      | expr â€¢ COMMA elist

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    COMMA          shift, and go to state 113

    $default  reduce using rule 64 (elist)


State 67

   67 tablemake: LEFT_BRACKET elist â€¢ RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 114


State 68

   68 tablemake: LEFT_BRACKET indexed â€¢ RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 115


State 69

   69 indexed: indexedelem â€¢
   70        | indexedelem â€¢ COMMA indexed

    COMMA  shift, and go to state 116

    $default  reduce using rule 69 (indexed)


State 70

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   29 term: LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_PAR      shift, and go to state 117


State 71

   41 primary: LEFT_PAR funcdef â€¢ RIGHT_PAR
   57 call: LEFT_PAR funcdef â€¢ RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 118


State 72

   45 lvalue: COL_COL IDENTIFIER â€¢

    $default  reduce using rule 45 (lvalue)


State 73

    0 $accept: program $end â€¢

    $default  accept


State 74

    2 program: stmt $@1 â€¢ program

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    $default  reduce using rule 3 (program)

    program     go to state 119
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 75

   26 expr: expr AND â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 76

   27 expr: expr OR â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 77

   15 expr: expr OP_PLUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 78

   16 expr: expr OP_MINUS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 79

   17 expr: expr OP_ASTERISK â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 80

   18 expr: expr OP_SLASH â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 81

   19 expr: expr OP_PERCENTAGE â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 82

   24 expr: expr OP_EQ_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 83

   25 expr: expr OP_NOT_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 84

   20 expr: expr OP_GREATER â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 85

   22 expr: expr OP_LESSER â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 86

   21 expr: expr OP_GREATER_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 87

   23 expr: expr OP_LESSER_EQ â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 88

    4 stmt: expr SEMICOLON â€¢

    $default  reduce using rule 4 (stmt)


State 89

   37 assignexpr: lvalue OP_EQUALS â€¢ expr

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 90

   33 term: lvalue OP_PLUS_PLUS â€¢

    $default  reduce using rule 33 (term)


State 91

   35 term: lvalue OP_MINUS_MINUS â€¢

    $default  reduce using rule 35 (term)


State 92

   49 tableitem: lvalue LEFT_BRACKET â€¢ expr RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 93

   48 tableitem: lvalue DOT â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 135


State 94

   55 call: lvalue $@3 â€¢ callsuffix

    LEFT_PAR  shift, and go to state 136
    DOT_DOT   shift, and go to state 137

    callsuffix  go to state 138
    normcall    go to state 139
    methodcall  go to state 140


State 95

   51 member: call LEFT_BRACKET â€¢ expr RIGHT_BRACKET

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 96

   50 member: call DOT â€¢ IDENTIFIER

    IDENTIFIER  shift, and go to state 142


State 97

   53 call: call $@2 â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 143


State 98

   82 funcargs: LEFT_PAR â€¢ idlist RIGHT_PAR

    IDENTIFIER  shift, and go to state 144

    $default  reduce using rule 96 (idlist)

    idlist  go to state 145


State 99

   84 funcdef: funcprefix funcargs â€¢ funcbody

    LEFT_BRACE  shift, and go to state 20

    block     go to state 146
    funcbody  go to state 147


State 100

   99 if_stmt: ifprefix stmt â€¢
  100        | ifprefix stmt â€¢ elseprefix stmt

    ELSE  shift, and go to state 148

    ELSE      [reduce using rule 99 (if_stmt)]
    $default  reduce using rule 99 (if_stmt)

    elseprefix  go to state 149


State 101

  102 whilecond: LEFT_PAR â€¢ expr RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 150
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 102

  103 while: whilestart whilecond â€¢ stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 151
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 103

  107 for_stmt: forprefix N â€¢ elist RIGHT_PAR N stmt N

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 152
    tablemake   go to state 35
    const       go to state 39


State 104

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   97 ifprefix: IF LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_PAR      shift, and go to state 153


State 105

  106 forprefix: FOR LEFT_PAR elist â€¢ SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 154


State 106

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER â€¢ RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend

    RIGHT_BRACE  shift, and go to state 155


State 107

  109 returnstmt: RETURN expr SEMICOLON â€¢

    $default  reduce using rule 109 (returnstmt)


State 108

   57 call: LEFT_PAR funcdef â€¢ RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR

    RIGHT_PAR  shift, and go to state 156


State 109

   75 block: LEFT_BRACE $@7 RIGHT_BRACE â€¢

    $default  reduce using rule 75 (block)


State 110

   72 func_stmt: stmt â€¢ func_stmt
   73          | stmt â€¢

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    $default  reduce using rule 73 (func_stmt)

    stmt        go to state 110
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    func_stmt   go to state 157
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 111

   78 block: LEFT_BRACE $@8 func_stmt â€¢ RIGHT_BRACE $@9

    RIGHT_BRACE  shift, and go to state 158


State 112

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   71 indexedelem: LEFT_BRACE expr â€¢ COLON expr RIGHT_BRACE

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    COLON          shift, and go to state 159


State 113

   65 elist: expr COMMA â€¢ elist

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 160
    tablemake   go to state 35
    const       go to state 39


State 114

   67 tablemake: LEFT_BRACKET elist RIGHT_BRACKET â€¢

    $default  reduce using rule 67 (tablemake)


State 115

   68 tablemake: LEFT_BRACKET indexed RIGHT_BRACKET â€¢

    $default  reduce using rule 68 (tablemake)


State 116

   70 indexed: indexedelem COMMA â€¢ indexed

    LEFT_BRACE  shift, and go to state 65

    indexed      go to state 161
    indexedelem  go to state 69


State 117

   29 term: LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 29 (term)


State 118

   41 primary: LEFT_PAR funcdef RIGHT_PAR â€¢
   57 call: LEFT_PAR funcdef RIGHT_PAR â€¢ $@4 LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  reduce using rule 56 ($@4)
    $default  reduce using rule 41 (primary)

    $@4  go to state 162


State 119

    2 program: stmt $@1 program â€¢

    $default  reduce using rule 2 (program)


State 120

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   26     | expr AND expr â€¢
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87

    $default  reduce using rule 26 (expr)


State 121

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   27     | expr OR expr â€¢

    AND            shift, and go to state 75
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87

    $default  reduce using rule 27 (expr)


State 122

   15 expr: expr â€¢ OP_PLUS expr
   15     | expr OP_PLUS expr â€¢
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    $default  reduce using rule 15 (expr)


State 123

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   16     | expr OP_MINUS expr â€¢
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    $default  reduce using rule 16 (expr)


State 124

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   17     | expr OP_ASTERISK expr â€¢
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    $default  reduce using rule 17 (expr)


State 125

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   18     | expr OP_SLASH expr â€¢
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    $default  reduce using rule 18 (expr)


State 126

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   19     | expr OP_PERCENTAGE expr â€¢
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    $default  reduce using rule 19 (expr)


State 127

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   24     | expr OP_EQ_EQ expr â€¢
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87

    OP_EQ_EQ   error (nonassociative)
    OP_NOT_EQ  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   25     | expr OP_NOT_EQ expr â€¢
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87

    OP_EQ_EQ   error (nonassociative)
    OP_NOT_EQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   20     | expr OP_GREATER expr â€¢
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 130

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   22     | expr OP_LESSER expr â€¢
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 131

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   21     | expr OP_GREATER_EQ expr â€¢
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 132

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   23     | expr OP_LESSER_EQ expr â€¢
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr

    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81

    OP_GREATER     error (nonassociative)
    OP_LESSER      error (nonassociative)
    OP_GREATER_EQ  error (nonassociative)
    OP_LESSER_EQ   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 133

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   37 assignexpr: lvalue OP_EQUALS expr â€¢

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87

    $default  reduce using rule 37 (assignexpr)


State 134

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   49 tableitem: lvalue LEFT_BRACKET expr â€¢ RIGHT_BRACKET

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_BRACKET  shift, and go to state 163


State 135

   48 tableitem: lvalue DOT IDENTIFIER â€¢

    $default  reduce using rule 48 (tableitem)


State 136

   61 normcall: LEFT_PAR â€¢ $@5 elist RIGHT_PAR

    $default  reduce using rule 60 ($@5)

    $@5  go to state 164


State 137

   63 methodcall: DOT_DOT â€¢ $@6 IDENTIFIER LEFT_PAR elist RIGHT_PAR

    $default  reduce using rule 62 ($@6)

    $@6  go to state 165


State 138

   55 call: lvalue $@3 callsuffix â€¢

    $default  reduce using rule 55 (call)


State 139

   58 callsuffix: normcall â€¢

    $default  reduce using rule 58 (callsuffix)


State 140

   59 callsuffix: methodcall â€¢

    $default  reduce using rule 59 (callsuffix)


State 141

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   51 member: call LEFT_BRACKET expr â€¢ RIGHT_BRACKET

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_BRACKET  shift, and go to state 166


State 142

   50 member: call DOT IDENTIFIER â€¢

    $default  reduce using rule 50 (member)


State 143

   53 call: call $@2 LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 167
    tablemake   go to state 35
    const       go to state 39


State 144

   94 idlist: IDENTIFIER â€¢
   95       | IDENTIFIER â€¢ COMMA idlist

    COMMA  shift, and go to state 168

    $default  reduce using rule 94 (idlist)


State 145

   82 funcargs: LEFT_PAR idlist â€¢ RIGHT_PAR

    RIGHT_PAR  shift, and go to state 169


State 146

   83 funcbody: block â€¢

    $default  reduce using rule 83 (funcbody)


State 147

   84 funcdef: funcprefix funcargs funcbody â€¢

    $default  reduce using rule 84 (funcdef)


State 148

   98 elseprefix: ELSE â€¢

    $default  reduce using rule 98 (elseprefix)


State 149

  100 if_stmt: ifprefix stmt elseprefix â€¢ stmt

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 170
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 150

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
  102 whilecond: LEFT_PAR expr â€¢ RIGHT_PAR

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_PAR      shift, and go to state 171


State 151

  103 while: whilestart whilecond stmt â€¢

    $default  reduce using rule 103 (while)


State 152

  107 for_stmt: forprefix N elist â€¢ RIGHT_PAR N stmt N

    RIGHT_PAR  shift, and go to state 172


State 153

   97 ifprefix: IF LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 97 (ifprefix)


State 154

  106 forprefix: FOR LEFT_PAR elist SEMICOLON â€¢ M expr SEMICOLON

    $default  reduce using rule 105 (M)

    M  go to state 173


State 155

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE â€¢ LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend

    LEFT_PAR  shift, and go to state 174


State 156

   57 call: LEFT_PAR funcdef RIGHT_PAR â€¢ $@4 LEFT_PAR elist RIGHT_PAR

    $default  reduce using rule 56 ($@4)

    $@4  go to state 162


State 157

   72 func_stmt: stmt func_stmt â€¢

    $default  reduce using rule 72 (func_stmt)


State 158

   78 block: LEFT_BRACE $@8 func_stmt RIGHT_BRACE â€¢ $@9

    $default  reduce using rule 77 ($@9)

    $@9  go to state 175


State 159

   71 indexedelem: LEFT_BRACE expr COLON â€¢ expr RIGHT_BRACE

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 176
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 160

   65 elist: expr COMMA elist â€¢

    $default  reduce using rule 65 (elist)


State 161

   70 indexed: indexedelem COMMA indexed â€¢

    $default  reduce using rule 70 (indexed)


State 162

   57 call: LEFT_PAR funcdef RIGHT_PAR $@4 â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 177


State 163

   49 tableitem: lvalue LEFT_BRACKET expr RIGHT_BRACKET â€¢

    $default  reduce using rule 49 (tableitem)


State 164

   61 normcall: LEFT_PAR $@5 â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 178
    tablemake   go to state 35
    const       go to state 39


State 165

   63 methodcall: DOT_DOT $@6 â€¢ IDENTIFIER LEFT_PAR elist RIGHT_PAR

    IDENTIFIER  shift, and go to state 179


State 166

   51 member: call LEFT_BRACKET expr RIGHT_BRACKET â€¢

    $default  reduce using rule 51 (member)


State 167

   53 call: call $@2 LEFT_PAR elist â€¢ RIGHT_PAR

    RIGHT_PAR  shift, and go to state 180


State 168

   95 idlist: IDENTIFIER COMMA â€¢ idlist

    IDENTIFIER  shift, and go to state 144

    $default  reduce using rule 96 (idlist)

    idlist  go to state 181


State 169

   82 funcargs: LEFT_PAR idlist RIGHT_PAR â€¢

    $default  reduce using rule 82 (funcargs)


State 170

  100 if_stmt: ifprefix stmt elseprefix stmt â€¢

    $default  reduce using rule 100 (if_stmt)


State 171

  102 whilecond: LEFT_PAR expr RIGHT_PAR â€¢

    $default  reduce using rule 102 (whilecond)


State 172

  107 for_stmt: forprefix N elist RIGHT_PAR â€¢ N stmt N

    $default  reduce using rule 104 (N)

    N  go to state 182


State 173

  106 forprefix: FOR LEFT_PAR elist SEMICOLON M â€¢ expr SEMICOLON

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    expr        go to state 183
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    const       go to state 39


State 174

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR â€¢ idlist RIGHT_PAR funcblockstart block funcblockend

    IDENTIFIER  shift, and go to state 144

    $default  reduce using rule 96 (idlist)

    idlist  go to state 184


State 175

   78 block: LEFT_BRACE $@8 func_stmt RIGHT_BRACE $@9 â€¢

    $default  reduce using rule 78 (block)


State 176

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
   71 indexedelem: LEFT_BRACE expr COLON expr â€¢ RIGHT_BRACE

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    RIGHT_BRACE    shift, and go to state 185


State 177

   57 call: LEFT_PAR funcdef RIGHT_PAR $@4 LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 186
    tablemake   go to state 35
    const       go to state 39


State 178

   61 normcall: LEFT_PAR $@5 elist â€¢ RIGHT_PAR

    RIGHT_PAR  shift, and go to state 187


State 179

   63 methodcall: DOT_DOT $@6 IDENTIFIER â€¢ LEFT_PAR elist RIGHT_PAR

    LEFT_PAR  shift, and go to state 188


State 180

   53 call: call $@2 LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 53 (call)


State 181

   95 idlist: IDENTIFIER COMMA idlist â€¢

    $default  reduce using rule 95 (idlist)


State 182

  107 for_stmt: forprefix N elist RIGHT_PAR N â€¢ stmt N

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    FOR             shift, and go to state 7
    FUNCTION        shift, and go to state 8
    RETURN          shift, and go to state 9
    BREAK           shift, and go to state 10
    CONTINUE        shift, and go to state 11
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACE      shift, and go to state 20
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    SEMICOLON       shift, and go to state 23
    COL_COL         shift, and go to state 24

    stmt        go to state 189
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    tablemake   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if_stmt     go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for_stmt    go to state 45
    returnstmt  go to state 46


State 183

   15 expr: expr â€¢ OP_PLUS expr
   16     | expr â€¢ OP_MINUS expr
   17     | expr â€¢ OP_ASTERISK expr
   18     | expr â€¢ OP_SLASH expr
   19     | expr â€¢ OP_PERCENTAGE expr
   20     | expr â€¢ OP_GREATER expr
   21     | expr â€¢ OP_GREATER_EQ expr
   22     | expr â€¢ OP_LESSER expr
   23     | expr â€¢ OP_LESSER_EQ expr
   24     | expr â€¢ OP_EQ_EQ expr
   25     | expr â€¢ OP_NOT_EQ expr
   26     | expr â€¢ AND expr
   27     | expr â€¢ OR expr
  106 forprefix: FOR LEFT_PAR elist SEMICOLON M expr â€¢ SEMICOLON

    AND            shift, and go to state 75
    OR             shift, and go to state 76
    OP_PLUS        shift, and go to state 77
    OP_MINUS       shift, and go to state 78
    OP_ASTERISK    shift, and go to state 79
    OP_SLASH       shift, and go to state 80
    OP_PERCENTAGE  shift, and go to state 81
    OP_EQ_EQ       shift, and go to state 82
    OP_NOT_EQ      shift, and go to state 83
    OP_GREATER     shift, and go to state 84
    OP_LESSER      shift, and go to state 85
    OP_GREATER_EQ  shift, and go to state 86
    OP_LESSER_EQ   shift, and go to state 87
    SEMICOLON      shift, and go to state 190


State 184

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist â€¢ RIGHT_PAR funcblockstart block funcblockend

    RIGHT_PAR  shift, and go to state 191


State 185

   71 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE â€¢

    $default  reduce using rule 71 (indexedelem)


State 186

   57 call: LEFT_PAR funcdef RIGHT_PAR $@4 LEFT_PAR elist â€¢ RIGHT_PAR

    RIGHT_PAR  shift, and go to state 192


State 187

   61 normcall: LEFT_PAR $@5 elist RIGHT_PAR â€¢

    $default  reduce using rule 61 (normcall)


State 188

   63 methodcall: DOT_DOT $@6 IDENTIFIER LEFT_PAR â€¢ elist RIGHT_PAR

    INTEGER         shift, and go to state 1
    REAL            shift, and go to state 2
    STRING          shift, and go to state 3
    IDENTIFIER      shift, and go to state 4
    NOT             shift, and go to state 12
    LOCAL           shift, and go to state 13
    TRUE            shift, and go to state 14
    FALSE           shift, and go to state 15
    NIL             shift, and go to state 16
    OP_MINUS        shift, and go to state 17
    OP_PLUS_PLUS    shift, and go to state 18
    OP_MINUS_MINUS  shift, and go to state 19
    LEFT_BRACKET    shift, and go to state 21
    LEFT_PAR        shift, and go to state 22
    COL_COL         shift, and go to state 24

    $default  reduce using rule 66 (elist)

    expr        go to state 66
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    tableitem   go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 193
    tablemake   go to state 35
    const       go to state 39


State 189

  107 for_stmt: forprefix N elist RIGHT_PAR N stmt â€¢ N

    $default  reduce using rule 104 (N)

    N  go to state 194


State 190

  106 forprefix: FOR LEFT_PAR elist SEMICOLON M expr SEMICOLON â€¢

    $default  reduce using rule 106 (forprefix)


State 191

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR â€¢ funcblockstart block funcblockend

    $default  reduce using rule 86 (funcblockstart)

    funcblockstart  go to state 195


State 192

   57 call: LEFT_PAR funcdef RIGHT_PAR $@4 LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 57 (call)


State 193

   63 methodcall: DOT_DOT $@6 IDENTIFIER LEFT_PAR elist â€¢ RIGHT_PAR

    RIGHT_PAR  shift, and go to state 196


State 194

  107 for_stmt: forprefix N elist RIGHT_PAR N stmt N â€¢

    $default  reduce using rule 107 (for_stmt)


State 195

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart â€¢ block funcblockend

    LEFT_BRACE  shift, and go to state 20

    block  go to state 197


State 196

   63 methodcall: DOT_DOT $@6 IDENTIFIER LEFT_PAR elist RIGHT_PAR â€¢

    $default  reduce using rule 63 (methodcall)


State 197

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block â€¢ funcblockend

    $default  reduce using rule 87 (funcblockend)

    funcblockend  go to state 198


State 198

   85 funcdef: FUNCTION LEFT_BRACE IDENTIFIER RIGHT_BRACE LEFT_PAR idlist RIGHT_PAR funcblockstart block funcblockend â€¢

    $default  reduce using rule 85 (funcdef)
